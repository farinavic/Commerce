@model Commerce.Models.Product

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Product</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ProductId)
    <div style="display: flex; flex-wrap: nowrap; justify-content: space-between;">
        <div>
            <div class="form-group">
                @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.ProductBrand, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ProductBrand, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProductBrand, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.ProductDescr, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ProductDescr, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProductDescr, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div>
            <div class="form-group">
                @Html.LabelFor(model => model.ProductState, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ProductState, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ProductState, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.ProductPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ProductPrice, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ProductPrice, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.ProductQty, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ProductQty, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ProductQty, "", new { @class = "text-danger" })
                </div>
            </div>





            
        </div>
            <div>
                <div class="form-group">
                    <div class="form-group" style="margin-bottom:10px">
                        @Html.LabelFor(model => model.ProductPic, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ProductPic, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ProductPic, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-offset-2 col-md-10">
                        <img id="ProductPicPreview" src="@Model.ProductPic" alt="Product Image" style="max-width: 250px; max-height: 400px;" />
                    </div>
                </div>
            </div>
           
        

       

        
    </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10" style=" display: inline-grid;">
                <input type="submit" value="Save" class="btn btn-success"  />
            </div>
        </div>
    
    </div>
}

<div>
    <a class="btn btn-light" href="@Url.Action("Index")" style="margin-top:10px;"><i class="bi bi-arrow-left-circle"></i>
    </a>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
